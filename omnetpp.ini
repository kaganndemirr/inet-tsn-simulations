[General]
sim-time-limit = 1ms
network = test

#####################################################

# use TSN switches
*.sw*.typename = "TsnSwitch"

# use TSN devices
*.cam*.typename = "TsnDevice"
*.daCam.typename = "TsnDevice"
*.hu.typename = "TsnDevice"
*.rse.typename = "TsnDevice"
*.telematics.typename = "TsnDevice"
*.cu.typename = "TsnDevice"
*.cdAudioDVD.typename = "TsnDevice"

# disable master clock
*.masterClock.typename = ""

# use TSN clock
# *.masterClock.typename = "TsnClock"

# other Ethernet links are 1Gbps
*.*.eth[*].bitrate = 1Gbps

# disable local multicast loop
**.udp.defaultMulticastLoop = false

###########################################################

# Applications

###########################################################

# daCam application
*.daCam.numApps = 4

*.daCam.app[0].typename = "UdpSourceApp"
*.daCam.app[0].source.packetNameFormat = "%M->hu:CLASS_A-%c"
*.daCam.app[0].source.packetLength = 46B
*.daCam.app[0].source.productionInterval = 1us
*.daCam.app[0].io.destAddress = "hu"
*.daCam.app[0].io.destPort = 1000

*.daCam.app[1].typename = "UdpSourceApp"
*.daCam.app[1].source.packetNameFormat = "%M->hu:CLASS_A-%c"
*.daCam.app[1].source.packetLength = 46B
*.daCam.app[1].source.productionInterval = 0.2us
*.daCam.app[1].io.destAddress = "hu"
*.daCam.app[1].io.destPort = 1001

*.daCam.app[2].typename = "UdpSourceApp"
*.daCam.app[2].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.daCam.app[2].source.packetLength = 46B
*.daCam.app[2].source.productionInterval = 1us
*.daCam.app[2].io.destAddress = "cu"
*.daCam.app[2].io.destPort = 1000

*.daCam.app[3].typename = "UdpSourceApp"
*.daCam.app[3].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.daCam.app[3].source.packetLength = 46B
*.daCam.app[3].source.productionInterval = 0.2us
*.daCam.app[3].io.destAddress = "cu"
*.daCam.app[3].io.destPort = 1001

# hu applications
*.hu.numApps = 10

*.hu.app[0].typename = "UdpSinkApp"
*.hu.app[0].display-name = "s1"
*.hu.app[0].io.localPort = 1000

*.hu.app[1].typename = "UdpSinkApp"
*.hu.app[1].display-name = "s2"
*.hu.app[1].io.localPort = 1001

*.hu.app[2].typename = "UdpSourceApp"
*.hu.app[2].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[2].source.packetLength = 46B
*.hu.app[2].source.productionInterval = 5ms
*.hu.app[2].io.destAddress = "cu"
*.hu.app[2].io.destPort = 1002

*.hu.app[3].typename = "UdpSourceApp"
*.hu.app[3].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[3].source.packetLength = 46B
*.hu.app[3].source.productionInterval = 50ms
*.hu.app[3].io.destAddress = "cu"
*.hu.app[3].io.destPort = 1003

*.hu.app[4].typename = "UdpSourceApp"
*.hu.app[4].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[4].source.packetLength = 46B
*.hu.app[4].source.productionInterval = 100ms
*.hu.app[4].io.destAddress = "cu"
*.hu.app[4].io.destPort = 1004

*.hu.app[5].typename = "UdpSourceApp"
*.hu.app[5].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[5].source.packetLength = 46B
*.hu.app[5].source.productionInterval = 100ms
*.hu.app[5].io.destAddress = "cu"
*.hu.app[5].io.destPort = 1005

*.hu.app[6].typename = "UdpSourceApp"
*.hu.app[6].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[6].source.packetLength = 46B
*.hu.app[6].source.productionInterval = 200ms
*.hu.app[6].io.destAddress = "cu"
*.hu.app[6].io.destPort = 1006

*.hu.app[7].typename = "UdpSourceApp"
*.hu.app[7].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[7].source.packetLength = 46B
*.hu.app[7].source.productionInterval = 500ms
*.hu.app[7].io.destAddress = "cu"
*.hu.app[7].io.destPort = 1007

*.hu.app[8].typename = "UdpSourceApp"
*.hu.app[8].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[8].source.packetLength = 46B
*.hu.app[8].source.productionInterval = 1000ms
*.hu.app[8].io.destAddress = "cu"
*.hu.app[8].io.destPort = 1008

*.hu.app[9].typename = "UdpSourceApp"
*.hu.app[9].source.packetNameFormat = "%M->cu:CLASS_A-%c"
*.hu.app[9].source.packetLength = 46B
*.hu.app[9].source.productionInterval = 1000ms
*.hu.app[9].io.destAddress = "cu"
*.hu.app[9].io.destPort = 1009

# cu applications
*.cu.numApps = 10

*.cu.app[0].typename = "UdpSinkApp"
*.cu.app[0].display-name = "s3"
*.cu.app[0].io.localPort = 1000

*.cu.app[1].typename = "UdpSinkApp"
*.cu.app[1].display-name = "s4"
*.cu.app[1].io.localPort = 1001

*.cu.app[2].typename = "UdpSinkApp"
*.cu.app[2].display-name = "s5"
*.cu.app[2].io.localPort = 1002

*.cu.app[3].typename = "UdpSinkApp"
*.cu.app[3].display-name = "s6"
*.cu.app[3].io.localPort = 1003

*.cu.app[4].typename = "UdpSinkApp"
*.cu.app[4].display-name = "s7"
*.cu.app[4].io.localPort = 1004

*.cu.app[5].typename = "UdpSinkApp"
*.cu.app[5].display-name = "s8"
*.cu.app[5].io.localPort = 1005

*.cu.app[6].typename = "UdpSinkApp"
*.cu.app[6].display-name = "s9"
*.cu.app[6].io.localPort = 1006

*.cu.app[7].typename = "UdpSinkApp"
*.cu.app[7].display-name = "s10"
*.cu.app[7].io.localPort = 1007

*.cu.app[8].typename = "UdpSinkApp"
*.cu.app[8].display-name = "s11"
*.cu.app[8].io.localPort = 1008

*.cu.app[9].typename = "UdpSinkApp"
*.cu.app[9].display-name = "s12"
*.cu.app[9].io.localPort = 1009

# enable outgoing TSN streams
*.*.hasOutgoingStreams = true

############################################

##################################
# Frame Preemption Configuration

# enable frame preemption
# *.sw*.hasFramePreemption = true
# *.sw*.eth[*].macLayer.typename = "EthernetPreemptingMacLayer"
# *.sw*.eth[*].phyLayer.typename = "EthernetPreemptingPhyLayer"

##################################

#############################
# Stream Coding Configuration

# daCam stream identification and coding
*.daCam.bridging.streamIdentifier.identifier.mapping = [{stream: "daCam", packetFilter: expr(has(udp))}]
*.daCam.bridging.streamCoder.encoder.mapping = [{stream: "daCam", pcp: 6}]

# hu stream identification and coding
*.*hu.bridging.streamIdentifier.identifier.mapping = [{stream: "hu", packetFilter: expr(has(udp))}]
*.*hu.bridging.streamCoder.encoder.mapping = [{stream: "hu", pcp: 6}]

*.sw*.bridging.streamCoder.decoder.mapping = [{source: "daCam", pcp: 6, stream: "daCam"},
                                                  {source: "hu", pcp: 6, stream: "hu"}]

*.sw*.bridging.streamCoder.encoder.mapping = [{stream: "daCam", pcp: 6},
                                                  {stream: "hu", pcp: 6}]

#############################

###############################
# Traffic Shaping Configuration

# credit based shaper for AVB classes
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1..6].typename = "Ieee8021qCreditBasedShaper"

*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 100Mbps
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[2].idleSlope = 200Mbps
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[3].idleSlope = 400Mbps
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[4].idleSlope = 800Mbps
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[5].idleSlope = 1Gbps
*.sw*.eth[*].macLayer.queue.transmissionSelectionAlgorithm[6].idleSlope = 2Gbps

#################################

###############################
# PCAP Recorder

*.sw1.numPcapRecorders = 1
*.sw1.pcapRecorder[0].moduleNamePatterns = "eth[*]"
*.sw1.pcapRecorder[0].pcapFile = "results/sw1.eth.pcap"

*.sw2.numPcapRecorders = 1
*.sw2.pcapRecorder[0].moduleNamePatterns = "eth[*]"
*.sw2.pcapRecorder[0].pcapFile = "results/sw2.eth.pcap"

**.crcMode = "computed"
**.fcsMode = "computed"

